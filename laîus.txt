Il n'y a qu'un seul niveau. 

La structure (départ, emplacement des murs, arrivée), devra être enregistrée dans un fichier pour la modifier facilement au besoin.

MacGyver sera controlé par les touches directionnelles du clavier.
Les objets seront répartis aléatoirement dans le labyrinthe. 
Ils changeront d'emplacement si l'utilisateur ferme le jeu et le relance.
La fenêtre du jeu sera un carré pouvant afficher 15 sprites sur la longueur.
MacGyver devra donc se déplacer de case en case, avec 15 cases sur la longueur de la fenêtre !
Il récupérera un objet simplement en se déplaçant dessus.
Le programme s'arrête uniquement si MacGyver a bien récupéré tous les objets et trouvé la sortie du labyrinthe. 
S'il n'a pas tous les objets et qu'il se présente devant le garde, il meurt (la vie est cruelle pour les h�ros).
Le programme sera standalone, c'est-à-dire qu'il pourra être exécuté sur n'importe quel ordinateur.

Processus : Classes = touts positionné dans l'espace
1 - Créer le cadre de départ
Initialisez un repo Git et envoyez-le sur Github.
Commencez par créer le labyrinthe sans l'interface graphique. 
Quand la logique de votre labyrinthe est faite, utilisez le module PyGame pour dessiner l'interface graphique.

Puis intéressez-vous aux trois éléments principaux du jeu : le gardien, MacGyver et les objets. 
Comment les repr�senter dans votre programme ? Où sont-ils placés au commencement du jeu ?  

2 - Animer le personnage
Le seul élément mouvant est MacGyver. Créez les méthodes de classe qui permettent de l'animer et de trouver la sortie. Pour l'instant, faites une version simplifi�e du jeu dans laquelle MacGyver gagne en arrivant face au gardien.
 
3 - Récupérer les objets
Ajoutez la gestion des objets. Comment MacGyver les ramasse-t-il ?  Ajoutez �galement un compteur qui les listera.
 
4 - Gagner !
Enfin, changez la fin du jeu : MacGyver gagne s'il a bien ramassé tous les objets et endormi le garde. Sinon, il perd.

d = départ
M = MacG
0 = mur
1 = peut cirucler
a = arrivé
G = Gardien


#create list prite
l1prite1[0] # d coresponded in departure
l1prite2[1][7] #where MCG can go 1
l1prite3[8][14] # walls 0
l2prite4[0][6]  # walls 0
l2prite5[7][12] # MCG can go 1
l2prite6[13][15] # walls 0
l3prite1[0][1] # MCG can go 1
l3prite2[2][3] # walls 0
l3prite3[4][8] # MCG can go 1
l3prite4[9][15] # walls 0
l4prite1[0][2] # walls 0
l4prite2[3][4] # MCG can go 1
l4prite3[5][10] # walls 0
l4prite4[11][14] # MCG can go 1
l4prite5[15][16] # walls 0
l5prite1[0] # walls 0
l5prite2[1][4] # MCG can go 1
l6prite3[5][9] # walls 0
l6prite4[10][11]# MCG can go 1
l6prite4[12]
l6prite[13][14]
l6prite[15]
l7prite1[0][3]
l7prite2[4][5]
l7prite3[6][10]
l7prite4[11][13]
l7prite5[14][15]
l8prite1[0][1]
l8prite2[2][3]
l8prite3[4][5]
l8prite4[6]
l8prite5[7][11]
l8prite6[12][15]
l9prite1[0]
l9prite2[1][2]
l9prite3[3][4]
l9prite4[5]
l9prite5[6][7]
l9prite6[8][15]
l10prite1[0][2]
l10prite2[3][4]
l10prite3[5][6]
l10prite4[7][13]
l10prite5[14]
l10prite6[15]
#donwload background floor picture
background = pygame.image.load('ressource/background.jpg')
 # paste background
screen.blit(background, (0,0))

 #put picture's name MacGyver
MacGyver = pygame.image.load('ressource/MacGyver.png')
 #put the background pics
position_MacGyver = MacGyver.get_rect()
screen.blit(MacGyver, (0,0) )

#put picture's name arrived
arrived = pygame.image.load('ressource/arrived.JPG')
screen.blit(arrived, (605,500))
pygame.key.set_repeat(400, 30)

#infinite loop
stay_open = 1

#using boucle to sayt open while is 1
while stay_open:
    #refresh the screen
    pygame.display.flip()
    #if the player close the windows
    for event in pygame.event.get():
        #the event si closing the windows
        if event.type == pygame.QUIT:
            stay_open = 0
            pygame.quit()
            print("game closed")


        #create event
        if event.type == pygame.KEYDOWN: #make move MacGyver
                if event.key == K_DOWN: #move down pres key down
                    position_MacGyver = position_MacGyver.move(0,3)
        
        if event.type == pygame.KEYDOWN:
            if event.key == K_UP:#move up press key up
                position_MacGyver = position_MacGyver.move(0,-3)

        if event.type == pygame.KEYDOWN:
            if event.key == K_LEFT:# move left press key left
                position_MacGyver = position_MacGyver.move(-3,0)

        if event.type == pygame.KEYDOWN:
            if event.key == K_RIGHT: # move roght press key right
                position_MacGyver= position_MacGyver.move(3,0)
                        
                        
            
    # paste background
    screen.blit(background, (0,0))
    screen.blit(MacGyver, position_MacGyver)
    #refresh the screen
    pygame.display.flip()